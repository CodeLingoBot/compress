// Code generated by "stringer -type=BlockType,LiteralsBlockType,seqCompMode"; DO NOT EDIT.

package zstd

import "strconv"

const _BlockType_name = "BlockTypeRawBlockTypeRLEBlockTypeCompressedBlockTypeReserved"

var _BlockType_index = [...]uint8{0, 12, 24, 43, 60}

func (i BlockType) String() string {
	if i >= BlockType(len(_BlockType_index)-1) {
		return "BlockType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BlockType_name[_BlockType_index[i]:_BlockType_index[i+1]]
}

const _LiteralsBlockType_name = "LiteralsBlockRawLiteralsBlockRLELiteralsBlockCompressedLiteralsBlockTreeless"

var _LiteralsBlockType_index = [...]uint8{0, 16, 32, 55, 76}

func (i LiteralsBlockType) String() string {
	if i >= LiteralsBlockType(len(_LiteralsBlockType_index)-1) {
		return "LiteralsBlockType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LiteralsBlockType_name[_LiteralsBlockType_index[i]:_LiteralsBlockType_index[i+1]]
}

const _seqCompMode_name = "compModePredefinedcompModeRLEcompModeFSEcompModeRepeat"

var _seqCompMode_index = [...]uint8{0, 18, 29, 40, 54}

func (i seqCompMode) String() string {
	if i >= seqCompMode(len(_seqCompMode_index)-1) {
		return "seqCompMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _seqCompMode_name[_seqCompMode_index[i]:_seqCompMode_index[i+1]]
}
